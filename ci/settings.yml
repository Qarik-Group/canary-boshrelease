---
meta:
  name:    canary
  target:  sw-staging
  url: (( vault "secret/pipelines/concourse:staging-url" ))

  initial_version: 0.0.1

  git:
    email:  ci@starkandwayne.com
    name:   "CI Bot"

  bosh-lite:
    target: https://10.58.111.49:25555
    username: (( vault "secret/bosh-lites/lite49/users/admin:username" ))
    password: (( vault "secret/bosh-lites/lite49/users/admin:password" ))
    cacert:   (( vault "secret/bosh-lites/lite49/certs:rootCA.pem" ))

  aws:
    access_key: (( vault "secret/aws/cfcommunity:access" ))
    secret_key: (( vault "secret/aws/cfcommunity:secret" ))

  github:
    owner:  starkandwayne
    repo:   canary-boshrelease
    branch: master
    private_key:  (( vault "secret/pipelines/canary-boshrelease/github:private" ))
    access_token: (( vault "secret/pipelines/canary-boshrelease/github:token" ))

  slack:
    webhook: (( vault "secret/pipelines/canary-boshrelease/slack:webhook" ))
    channel: '#snw-infrastructure'
    success_url: '(( concat meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME" ))'

jobs:
- name: shipit
  plan:
  - (( inline ))
  - do:
    - (( merge ))
    - name: inputs
      aggregate:
      - (( merge on get ))
      - get: git
        trigger: true
    on_success:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( concat meta.slack.success_moji " " meta.pipeline " has succeeded through all steps! (<" meta.slack.success_url "| shipit build $BUILD_NAME>)" ))
